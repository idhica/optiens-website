---
import Layout from '../../layouts/Layout.astro';
import { createClient } from 'microcms-js-sdk';
import { format } from 'date-fns';
import type { News, MicroCMSListResponse } from '../../types/microcms.d.ts';

const { slug } = Astro.params;

const client = createClient({
  serviceDomain: import.meta.env.MICROCMS_SERVICE_DOMAIN,
  apiKey: import.meta.env.MICROCMS_API_KEY,
});

let newsArticle;
try {
  const response = await client.get<MicroCMSListResponse<News>>({
    endpoint: 'news',
    queries: { filters: `slug[equals]${slug}` }
  });
  newsArticle = response.contents[0];
} catch (error) {
  console.error(`Failed to fetch news article for slug: ${slug}`, error);
  return Astro.redirect('/404');
}

if (!newsArticle) {
  return Astro.redirect('/404');
}

export async function getStaticPaths() {
  const client = createClient({
    serviceDomain: import.meta.env.MICROCMS_SERVICE_DOMAIN,
    apiKey: import.meta.env.MICROCMS_API_KEY,
  });

  const newsResponse = await client.get<MicroCMSListResponse<News>>({
    endpoint: 'news',
    queries: { limit: 100 }
  });

  if (!newsResponse || !newsResponse.contents) {
    return [];
  }

  return newsResponse.contents.map((news) => ({
    params: { slug: news.slug },
  }));
}
---
<Layout title={`${newsArticle.title} | Optiens`}>
  <main>
    <section class="news-detail-container">
      <div class="container">
        <article class="news-article">
          <h1 class="news-title">{newsArticle.title}</h1>
          <p class="news-date">{format(new Date(newsArticle.publishedAt), 'yyyy.MM.dd')}</p>
          <div class="news-body" set:html={newsArticle.body} />
        </article>
      </div>
    </section>
  </main>
</Layout>

<style>
  .news-detail-container {
    /* ここを修正しました */
    padding: 120px 20px 60px; /* 上部を120pxに設定し、下部を60pxに維持 */
  }
  .news-article {
    max-width: 800px;
    margin: 0 auto;
    background-color: var(--background-color-light);
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  .news-title {
    font-size: 1.0rem;
    font-weight: bold;
    color: var(--heading-color);
    margin-bottom: 0.5rem;
  }
  .news-date {
    font-size: 0.9rem;
    color: var(--text-color-light);
    margin-bottom: 2rem;
    display: block;
  }
  .news-body :global(h2),
  .news-body :global(h3),
  .news-body :global(p),
  .news-body :global(ul),
  .news-body :global(ol) {
    line-height: 1.8;
    margin-bottom: 1.5rem;
  }
  .news-body :global(h2) {
    font-size: 2rem;